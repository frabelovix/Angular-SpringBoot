{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/customer/customer-create/customer-create.component.css","webpack:///./src/app/customer/customer-create/customer-create.component.html","webpack:///./src/app/customer/customer-create/customer-create.component.ts","webpack:///./src/app/customer/customer-edit/customer-edit.component.css","webpack:///./src/app/customer/customer-edit/customer-edit.component.html","webpack:///./src/app/customer/customer-edit/customer-edit.component.ts","webpack:///./src/app/customer/customer-home/customer-home.component.css","webpack:///./src/app/customer/customer-home/customer-home.component.html","webpack:///./src/app/customer/customer-home/customer-home.component.ts","webpack:///./src/app/customer/customer-list/customer-list.component.css","webpack:///./src/app/customer/customer-list/customer-list.component.html","webpack:///./src/app/customer/customer-list/customer-list.component.ts","webpack:///./src/app/nav/nav.component.css","webpack:///./src/app/nav/nav.component.html","webpack:///./src/app/nav/nav.component.ts","webpack:///./src/app/orders/order-items/order-items.component.html","webpack:///./src/app/orders/order-items/order-items.component.ts","webpack:///./src/app/orders/order/order.component.html","webpack:///./src/app/orders/order/order.component.ts","webpack:///./src/app/orders/orders.component.html","webpack:///./src/app/orders/orders.component.ts","webpack:///./src/app/product/product-create/product-create.component.css","webpack:///./src/app/product/product-create/product-create.component.html","webpack:///./src/app/product/product-create/product-create.component.ts","webpack:///./src/app/product/product-edit/product-edit.component.css","webpack:///./src/app/product/product-edit/product-edit.component.html","webpack:///./src/app/product/product-edit/product-edit.component.ts","webpack:///./src/app/product/product-home/product-home.component.css","webpack:///./src/app/product/product-home/product-home.component.html","webpack:///./src/app/product/product-home/product-home.component.ts","webpack:///./src/app/product/product-list/product-list.component.css","webpack:///./src/app/product/product-list/product-list.component.html","webpack:///./src/app/product/product-list/product-list.component.ts","webpack:///./src/app/shared/customer.model.ts","webpack:///./src/app/shared/customer.service.ts","webpack:///./src/app/shared/item.model.ts","webpack:///./src/app/shared/item.service.ts","webpack:///./src/app/shared/order.service.ts","webpack:///./src/app/shared/printer.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { OrdersComponent } from './orders/orders.component';\nimport { OrderComponent } from './orders/order/order.component';\nimport { CustomerHomeComponent } from './customer/customer-home/customer-home.component';\nimport { ProductHomeComponent } from './product/product-home/product-home.component';\nimport { CustomerCreateComponent } from './customer/customer-create/customer-create.component';\nimport { CustomerEditComponent } from './customer/customer-edit/customer-edit.component';\nimport { ProductCreateComponent } from './product/product-create/product-create.component';\nimport { ProductEditComponent } from './product/product-edit/product-edit.component';\n\nconst routes: Routes = [\n  {path: '', redirectTo: 'orders', pathMatch: 'full'},\n  {path: 'orders', component: OrdersComponent},\n  {path: 'order', children: [\n    {path: '', component: OrderComponent},\n    {path: 'edit/:id', component: OrderComponent}\n  ]},\n  {path: 'customers', component: CustomerHomeComponent},\n  {path: 'customer', children: [\n    {path: '', component: CustomerCreateComponent},\n    {path: 'edit/:id', component: CustomerEditComponent}\n  ]},\n  {path: 'products', component: ProductHomeComponent},\n  {path: 'product', children: [\n    {path: '', component: ProductCreateComponent},\n    {path: 'edit/:id', component: ProductEditComponent}\n  ]},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"jumbotron jumbtron-fluid\\\">\\n  <h3 class=\\\"display-4 text-center\\\"><img src=\\\"/assets/img/food.png\\\"> Restaurant App.</h3>\\n  <!--\\n  <div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-10 offset-md-1\\\">\\n        <app-nav></app-nav>\\n      </div>\\n    </div>\\n  </div>\\n  -->\\n  <app-nav></app-nav>\\n</div>\\n\\n\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Angular';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { FormsModule } from \"@angular/forms\";\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ToastrModule } from 'ngx-toastr';\n\nimport { OrdersComponent } from './orders/orders.component';\nimport { OrderComponent } from './orders/order/order.component';\nimport { OrderItemsComponent } from './orders/order-items/order-items.component';\nimport { OrderService } from './shared/order.service';\nimport { ProductHomeComponent } from './product/product-home/product-home.component';\nimport { ProductCreateComponent } from './product/product-create/product-create.component';\nimport { ProductListComponent } from './product/product-list/product-list.component';\nimport { CustomerHomeComponent } from './customer/customer-home/customer-home.component';\nimport { CustomerCreateComponent } from './customer/customer-create/customer-create.component';\nimport { CustomerListComponent } from './customer/customer-list/customer-list.component';\nimport { CustomerEditComponent } from './customer/customer-edit/customer-edit.component';\nimport { ProductEditComponent } from './product/product-edit/product-edit.component';\nimport { NavComponent } from './nav/nav.component';\nimport { MatSidenavModule, MatListModule, MatCardModule, MatButtonModule, MatFormFieldModule, MatInputModule} from '@angular/material';\nimport {MatPaginatorModule} from '@angular/material/paginator';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    OrdersComponent,\n    OrderComponent,\n    OrderItemsComponent,\n    ProductHomeComponent,\n    ProductCreateComponent,\n    ProductListComponent,\n    CustomerHomeComponent,\n    CustomerCreateComponent,\n    CustomerListComponent,\n    CustomerEditComponent,\n    ProductEditComponent,\n    NavComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    BrowserAnimationsModule,\n    MatDialogModule,\n    HttpClientModule,\n    ToastrModule.forRoot(),\n    MatSidenavModule,\n    MatListModule,\n    MatCardModule,\n    MatButtonModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatPaginatorModule\n  ],\n  entryComponents:[OrderItemsComponent],\n  providers: [OrderService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"form {\\n    display: flex;\\n    flex-direction: column;\\n    margin-top: 20px;\\n}\\n\\nbutton {\\n    margin-top: 20px;\\n    margin-right: 15px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY3VzdG9tZXIvY3VzdG9tZXItY3JlYXRlL2N1c3RvbWVyLWNyZWF0ZS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksY0FBYztJQUNkLHVCQUF1QjtJQUN2QixpQkFBaUI7Q0FDcEI7O0FBRUQ7SUFDSSxpQkFBaUI7SUFDakIsbUJBQW1CO0NBQ3RCIiwiZmlsZSI6InNyYy9hcHAvY3VzdG9tZXIvY3VzdG9tZXItY3JlYXRlL2N1c3RvbWVyLWNyZWF0ZS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiZm9ybSB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIG1hcmdpbi10b3A6IDIwcHg7XG59XG5cbmJ1dHRvbiB7XG4gICAgbWFyZ2luLXRvcDogMjBweDtcbiAgICBtYXJnaW4tcmlnaHQ6IDE1cHg7XG59Il19 */\"","module.exports = \"<mat-card>\\n  <mat-card-title>Novo Cliente</mat-card-title>\\n  <form>\\n      <mat-form-field>\\n          <input matInput placeholder=\\\"Nome\\\" [(ngModel)]=\\\"customer.name\\\" name=\\\"name\\\">\\n      </mat-form-field>\\n\\n  </form>\\n\\n  <button mat-raised-button (click)=\\\"createCustomer()\\\" color=\\\"primary\\\">\\n      Salvar\\n  </button>\\n\\n  <button mat-raised-button (click)=\\\"cancel()\\\" color=\\\"warnning\\\">\\n      Cancelar\\n  </button>\\n</mat-card>\"","import { Component, OnInit } from '@angular/core';\nimport { Customer } from 'src/app/shared/customer.model';\nimport { CustomerService } from 'src/app/shared/customer.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-customer-create',\n  templateUrl: './customer-create.component.html',\n  styleUrls: ['./customer-create.component.css']\n})\nexport class CustomerCreateComponent implements OnInit {\n  customer: Customer = {\n    name: ''\n  }\n\n\n  constructor(private service: CustomerService,\n    private router: Router) { }\n\n  ngOnInit() {\n  }\n\n  createCustomer(): void {\n    this.service.saveOrUpdateCustomer(this.customer).subscribe(() => {\n      //this.service.showMessage('Criar produto');\n      this.router.navigate(['/customers']);\n    });\n  }\n\n  cancel(): void{\n    this.router.navigate(['/customers']);\n  }\n\n}\n","module.exports = \"form {\\n    display: flex;\\n    flex-direction: column;\\n    margin-top: 20px;\\n}\\n\\nbutton {\\n    margin-top: 20px;\\n    margin-right: 15px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY3VzdG9tZXIvY3VzdG9tZXItZWRpdC9jdXN0b21lci1lZGl0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxjQUFjO0lBQ2QsdUJBQXVCO0lBQ3ZCLGlCQUFpQjtDQUNwQjs7QUFFRDtJQUNJLGlCQUFpQjtJQUNqQixtQkFBbUI7Q0FDdEIiLCJmaWxlIjoic3JjL2FwcC9jdXN0b21lci9jdXN0b21lci1lZGl0L2N1c3RvbWVyLWVkaXQuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbImZvcm0ge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICBtYXJnaW4tdG9wOiAyMHB4O1xufVxuXG5idXR0b24ge1xuICAgIG1hcmdpbi10b3A6IDIwcHg7XG4gICAgbWFyZ2luLXJpZ2h0OiAxNXB4O1xufSJdfQ== */\"","module.exports = \"<mat-card>\\n  <mat-card-title>Editar Cliente</mat-card-title>\\n  <form>\\n      <mat-form-field>\\n          <input matInput placeholder=\\\"Nome\\\" [(ngModel)]=\\\"customer.name\\\" name=\\\"name\\\">\\n      </mat-form-field>\\n\\n  </form>\\n\\n  <button mat-raised-button (click)=\\\"updateCustomer()\\\" color=\\\"primary\\\">\\n      Salvar\\n  </button>\\n\\n  <button mat-raised-button (click)=\\\"cancel()\\\" color=\\\"warnning\\\">\\n      Cancelar\\n  </button>\\n</mat-card>\"","import { Component, OnInit } from '@angular/core';\nimport { CustomerService } from 'src/app/shared/customer.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Customer } from 'src/app/shared/customer.model';\n\n@Component({\n  selector: 'app-customer-edit',\n  templateUrl: './customer-edit.component.html',\n  styleUrls: ['./customer-edit.component.css']\n})\nexport class CustomerEditComponent implements OnInit {\n  customer: Customer = new Customer();\n\n  constructor(private service: CustomerService,\n    private router: Router, private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    const id = this.route.snapshot.paramMap.get('id');\n    this.service.getCustomerByID(parseInt(id)).then(res => {\n      this.customer = res;\n    });\n\n\n  }\n\n  updateCustomer(){\n    this.service.updateCustomer(this.customer).subscribe(() => {\n      //this.service.showMessage('Criar produto');\n      this.router.navigate(['/customers']);\n    });\n  }\n\n\n  cancel(): void {\n    this.router.navigate(['/customers']);\n  }\n  \n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2N1c3RvbWVyL2N1c3RvbWVyLWhvbWUvY3VzdG9tZXItaG9tZS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<app-customer-list></app-customer-list>\"","import { Component, OnInit } from '@angular/core';\nimport { CustomerService } from 'src/app/shared/customer.service';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-customer-home',\n  templateUrl: './customer-home.component.html',\n  styleUrls: ['./customer-home.component.css']\n})\nexport class CustomerHomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2N1c3RvbWVyL2N1c3RvbWVyLWxpc3QvY3VzdG9tZXItbGlzdC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<table class=\\\"table table-hover\\\">\\n  <thead class=\\\"thead-light\\\">\\n    <th>Id</th>\\n    <th>Nome</th>\\n    <th>\\n      <a class=\\\"btn btn-outline-success\\\" routerLink=\\\"/customer\\\"><i class=\\\"fa fa-plus-square\\\"></i> Novo Cliente</a>\\n    </th>\\n  </thead>\\n  <tbody>\\n    <tr *ngFor=\\\"let item of customerList\\\">\\n      <td (click)=\\\"openForEdit(item.customerId)\\\">{{item.customerId}}</td>\\n      <td (click)=\\\"openForEdit(item.customerId)\\\">{{item.name}}</td>\\n      <td>\\n          <a class=\\\"btn text-danger\\\" (click)=\\\"onCustomerDelete(item.customerId)\\\"><i class=\\\"fa fa-trash fa-lg\\\"></i></a>\\n      </td>\\n    </tr>\\n  </tbody>\\n</table>\\n\\n<mat-paginator [length]=\\\"length\\\"\\n               [pageSize]=\\\"pageSize\\\"\\n               [pageSizeOptions]=\\\"pageSizeOptions\\\"\\n               (page)=\\\"pageEvent = getServerData($event)\\\">\\n</mat-paginator>\"","import { Component, OnInit } from '@angular/core';\nimport { CustomerService } from 'src/app/shared/customer.service';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { PageEvent } from '@angular/material';\nimport { Page } from 'src/app/shared/page.model';\n\n@Component({\n  selector: 'app-customer-list',\n  templateUrl: './customer-list.component.html',\n  styleUrls: ['./customer-list.component.css']\n})\nexport class CustomerListComponent implements OnInit {\n  customerList;\n\n  // MatPaginator Inputs\n  pageIndex = 0;\n  length = 100;\n  pageSize = 10;\n  pageSizeOptions: number[] = [5, 10, 25, 100];\n  // MatPaginator Output\n  pageEvent: PageEvent;\n\n  page: Page;\n\n\n  constructor(private service: CustomerService,\n    private router: Router,\n    private toastr: ToastrService) { }\n\n  ngOnInit() {\n    this.refreshList();\n  }\n\n  refreshList() {\n    this.service.getCustomerListPaginated(this.pageIndex, this.pageSize).then(res => {\n      this.page = res,\n      this.customerList = this.page.content;\n      this.length = this.page.totalElements;\n    });\n  }\n\n  openForEdit(id: number) {\n     this.router.navigate(['/customer/edit/' + id]);\n\n  }\n\n  onCustomerDelete(id: number) {\n    if (confirm('Confirma exclusão desse registro?')) {\n      this.service.deleteCustomer(id).then(res => {\n        this.refreshList();\n        this.toastr.warning('Registro excluído com sucesso!', 'Restaurente App.');\n      });\n    }\n  }\n\n  getServerData(event?: PageEvent) {\n    this.pageIndex = event.pageIndex;\n    this.pageSize = event.pageSize;\n    this.refreshList();\n\n  }\n\n}\n","module.exports = \".sidenav {\\n    background-color: #3f5185;\\n    width: 200px;\\n}\\n\\n.sidenav a {\\n    color: #FFF;\\n}\\n\\n.sidenav i {\\n    padding-right: 10px;\\n}\\n\\n.content {\\n    padding: 16px;\\n    background-color: #FFF;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbmF2L25hdi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksMEJBQTBCO0lBQzFCLGFBQWE7Q0FDaEI7O0FBRUQ7SUFDSSxZQUFZO0NBQ2Y7O0FBRUQ7SUFDSSxvQkFBb0I7Q0FDdkI7O0FBRUQ7SUFDSSxjQUFjO0lBQ2QsdUJBQXVCO0NBQzFCIiwiZmlsZSI6InNyYy9hcHAvbmF2L25hdi5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnNpZGVuYXYge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICMzZjUxODU7XG4gICAgd2lkdGg6IDIwMHB4O1xufVxuXG4uc2lkZW5hdiBhIHtcbiAgICBjb2xvcjogI0ZGRjtcbn1cblxuLnNpZGVuYXYgaSB7XG4gICAgcGFkZGluZy1yaWdodDogMTBweDtcbn1cblxuLmNvbnRlbnQge1xuICAgIHBhZGRpbmc6IDE2cHg7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI0ZGRjtcbn0iXX0= */\"","module.exports = \"<mat-sidenav-container class=\\\"container\\\">\\n  <mat-sidenav class=\\\"sidenav\\\" mode=\\\"side\\\" opened fixedInViewport=\\\"true\\\" fixedTopGap=\\\"64\\\">\\n      <mat-nav-list class=\\\"nav-list\\\">\\n          <a mat-list-item routerLink=\\\"/orders\\\">\\n            <i class=\\\"fa fa-home fa-lg\\\">  Home</i>\\n          </a>\\n\\n          <a mat-list-item routerLink=\\\"/customers\\\">\\n            <i class=\\\"fa fa-users fa-lg\\\">  Clientes</i>\\n          </a>\\n\\n          <a mat-list-item routerLink=\\\"/products\\\">\\n            <i class=\\\"fa fa-gift fa-lg\\\">  Produtos</i>\\n          </a>\\n\\n          <a mat-list-item routerLink=\\\"/order\\\">\\n            <i class=\\\"fa fa-cart-plus fa-lg\\\">  Pedido</i>\\n          </a>\\n\\n\\n      </mat-nav-list>\\n\\n  </mat-sidenav>\\n  <mat-sidenav-content class=\\\"content\\\">\\n      <router-outlet></router-outlet>\\n\\n  </mat-sidenav-content>\\n</mat-sidenav-container>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.css']\n})\nexport class NavComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<h4 class=\\\"dispaly-4\\\">Order Food Item</h4>\\n<hr>\\n<form #form=\\\"ngForm\\\" autocomplete=\\\"off\\\" (submit)=\\\"onSubmit(form)\\\">\\n    <input type=\\\"hidden\\\"  name=\\\"orderItemId\\\" #orderItemId=\\\"ngModel\\\" [(ngModel)]=\\\"formData.orderItemId\\\">\\n    <input type=\\\"hidden\\\"  name=\\\"orderId\\\" #orderId=\\\"ngModel\\\" [(ngModel)]=\\\"formData.orderId\\\">\\n  <input type=\\\"hidden\\\"  name=\\\"itemName\\\" #itemName=\\\"ngModel\\\" [(ngModel)]=\\\"formData.itemName\\\">\\n  <div class=\\\"form-group\\\">\\n    <label>Food Item</label>\\n    <select name=\\\"itemId\\\" #itemId=\\\"ngModel\\\" [(ngModel)]=\\\"formData.itemId\\\" class=\\\"form-control\\\" (change)=\\\"updatePrice($event.target)\\\"\\n    [class.is-invalid]=\\\"!isValid && formData.itemId==0\\\">\\n      <option value=\\\"0\\\">-Select-</option>\\n      <option *ngFor=\\\"let item of itemList\\\" value=\\\"{{item.itemId}}\\\">{{item.name}}</option>\\n    </select>\\n  </div>\\n  <div class=\\\"form-row\\\">\\n    <div class=\\\"form-group col-md-6\\\">\\n      <label>Price</label>\\n      <div class=\\\"input-group\\\">\\n        <div class=\\\"input-group-prepend\\\">\\n          <div class=\\\"input-group-text\\\">$</div>\\n        </div>\\n        <input name=\\\"price\\\" #price=\\\"ngModel\\\" [(ngModel)]=\\\"formData.price\\\" class=\\\"form-control\\\" readonly>\\n      </div>\\n    </div>\\n    <div class=\\\"form-group col-md-6\\\">\\n      <label>Quantity</label>\\n      <input name=\\\"quantity\\\" #quantityv=\\\"ngModel\\\" [(ngModel)]=\\\"formData.quantity\\\" class=\\\"form-control\\\"\\n      (keyup)=\\\"updateTotal()\\\" [class.is-invalid]=\\\"!isValid && formData.quantity==0\\\">\\n    </div>\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label>Total</label>\\n    <div class=\\\"input-group\\\">\\n      <div class=\\\"input-group-prepend\\\">\\n        <div class=\\\"input-group-text\\\">$</div>\\n      </div>\\n      <input name=\\\"total\\\" #total=\\\"ngModel\\\" [(ngModel)]=\\\"formData.total\\\" class=\\\"form-control\\\" readonly>\\n    </div>\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <button type=\\\"submit\\\" class=\\\"btn btn-dark\\\"><i class=\\\"fa fa-database\\\"></i> Submit</button>\\n    <button type=\\\"button\\\" class=\\\"btn btn-outline-dark ml-1\\\" [mat-dialog-close]><i class=\\\"fa fa-close\\\"></i> Close</button>\\n  </div>\\n</form>\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material\";\nimport { OrderItem } from 'src/app/shared/order-item.model';\nimport { ItemService } from 'src/app/shared/item.service';\nimport { Item } from 'src/app/shared/item.model';\nimport { NgForm } from '@angular/forms';\nimport { OrderService } from 'src/app/shared/order.service';\n\n@Component({\n  selector: 'app-order-items',\n  templateUrl: './order-items.component.html',\n  styles: []\n})\nexport class OrderItemsComponent implements OnInit {\n  formData: OrderItem;\n  itemList: Item[];\n  isValid: boolean = true;\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data,\n    public dialogRef: MatDialogRef<OrderItemsComponent>,\n    private itemService: ItemService,\n    private orderSevice: OrderService) { }\n\n  ngOnInit() {\n    this.itemService.getProductList().then(res => this.itemList = res as Item[]);\n    if (this.data.orderItemIndex == null)\n      this.formData = {\n        orderItemId: null,\n        orderId: this.data.orderId,\n        itemId: 0,\n        itemName: '',\n        price: 0,\n        quantity: 0,\n        total: 0\n      }\n    else\n      this.formData = Object.assign({}, this.orderSevice.orderItems[this.data.orderItemIndex]);\n  }\n\n  updatePrice(ctrl) {\n    if (ctrl.selectedIndex == 0) {\n      this.formData.price = 0;\n      this.formData.itemName = '';\n    }\n    else {\n      this.formData.price = this.itemList[ctrl.selectedIndex - 1].price;\n      this.formData.itemName = this.itemList[ctrl.selectedIndex - 1].name;\n    }\n    this.updateTotal();\n  }\n\n  updateTotal() {\n    this.formData.total = parseFloat((this.formData.quantity * this.formData.price).toFixed(2));\n  }\n\n  onSubmit(form: NgForm) {    \n    if (this.validateForm(form.value)) {\n      if (this.data.orderItemIndex == null)\n        this.orderSevice.orderItems.push(form.value);\n      else\n        this.orderSevice.orderItems[this.data.orderItemIndex] = form.value;\n      this.dialogRef.close();\n    }\n  }\n\n  validateForm(formData: OrderItem) {\n    this.isValid = true;\n    if (formData.itemId == 0)\n      this.isValid = false;\n    else if (formData.quantity == 0)\n      this.isValid = false;\n    return this.isValid;\n  }\n\n}\n","module.exports = \"<form #form=\\\"ngForm\\\" autocomplete=\\\"off\\\" *ngIf=\\\"service.formData\\\" (submit)=\\\"onSubmit(form)\\\">\\n  <input type=\\\"hidden\\\" name=\\\"orderId\\\" #orderId=\\\"ngModel\\\" [(ngModel)]=\\\"service.formData.orderId\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-6\\\">\\n      <div class=\\\"form-group\\\">\\n        <label>Order No.</label>\\n        <div class=\\\"input-group\\\">\\n          <div class=\\\"input-group-prepend\\\">\\n            <div class=\\\"input-group-text\\\">#</div>\\n          </div>\\n          <input name=\\\"orderNo\\\" #orderNo=\\\"ngModel\\\" [(ngModel)]=\\\"service.formData.orderNo\\\" class=\\\"form-control\\\" readonly>\\n        </div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label>Customer</label>\\n        <select name=\\\"customerid\\\" #customerid=\\\"ngModel\\\" [(ngModel)]=\\\"service.formData.customerid\\\" class=\\\"form-control\\\"\\n          [class.is-invalid]=\\\"!isValid && service.formData.customerid==0\\\">\\n          <option value=\\\"0\\\">-Select-</option>\\n          <option *ngFor=\\\"let item of customerList\\\" value=\\\"{{item.customerId}}\\\">{{item.name}}</option>\\n        </select>\\n      </div>\\n    </div>\\n    <div class=\\\"col-md-6\\\">\\n      <div class=\\\"form-group\\\">\\n        <label>Payment Method</label>\\n        <select name=\\\"pMethod\\\" #pMethod=\\\"ngModel\\\" [(ngModel)]=\\\"service.formData.pMethod\\\" class=\\\"form-control\\\">\\n          <option value=\\\"\\\">-Select-</option>\\n          <option value=\\\"Cash\\\">Cash</option>\\n          <option value=\\\"Card\\\">Card</option>\\n        </select>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label>Grand Total</label>\\n\\n        <div class=\\\"input-group\\\">\\n          <div class=\\\"input-group-prepend\\\">\\n            <div class=\\\"input-group-text\\\">$</div>\\n          </div>\\n          <input name=\\\"gTotal\\\" #gTotal=\\\"ngModel\\\" [(ngModel)]=\\\"service.formData.gTotal\\\" class=\\\"form-control\\\" readonly>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <!-- order items table-->\\n  <table class=\\\"table table-borderless\\\">\\n    <thead class=\\\"thead-light\\\">\\n      <th>Food</th>\\n      <th>Price</th>\\n      <th>Quantity</th>\\n      <th>Total</th>\\n      <th>\\n        <a class=\\\"btn btn-sm btn-success text-white\\\" (click)=\\\"AddOrEditOrderItem(null,service.formData.orderId)\\\"><i\\n            class=\\\"fa fa-plus\\\"></i> Add Item</a>\\n      </th>\\n    </thead>\\n    <tbody>\\n      <tr *ngIf=\\\"service.orderItems.length==0\\\" [class.text-danger]=\\\"!isValid && service.orderItems.length==0\\\">\\n        <td class=\\\"font-italic text-center\\\" colspan=\\\"5\\\">\\n          No food item selected for this order.\\n        </td>\\n      </tr>\\n\\n      <tr *ngFor=\\\"let item of service.orderItems;let i=index;\\\">\\n        <td>{{item.itemName}}</td>\\n        <td>{{item.price | currency: 'BRL'}}</td>\\n        <td>{{item.quantity}}</td>\\n        <td>{{item.total | currency: 'BRL'}}</td>\\n        <td>\\n          <a class=\\\"btn btn-sm btn-info text-white\\\" (click)=\\\"AddOrEditOrderItem(i,service.formData.orderId)\\\"><i\\n              class=\\\"fa fa-pencil\\\"></i></a>\\n          <a class=\\\"btn btn-sm btn-danger text-white ml-1\\\" (click)=\\\"onDeleteOrderItem(item.orderItemId,i)\\\"><i\\n              class=\\\"fa fa-trash\\\"></i></a>\\n        </td>\\n      </tr>\\n    </tbody>\\n  </table>\\n  <div class=\\\"form-group\\\">\\n    <button type=\\\"submit\\\" class=\\\"btn btn-dark\\\"><i class=\\\"fa fa-database\\\"></i> Gravar</button>\\n\\n      <a *ngIf=\\\"service.formData.orderId != null\\\"  class=\\\"btn btn-outline-dark ml-1\\\" (click)=\\\"onExportar(service.formData.orderId)\\\"><i\\n          class=\\\"fa fa-file-pdf-o\\\"></i> Exportar</a>\\n\\n    <a class=\\\"btn btn-outline-dark ml-1\\\" routerLink=\\\"/orders\\\"><i class=\\\"fa fa-table\\\"></i> Listar Pedidos</a>\\n\\n  </div>\\n</form>\"","import { CustomerService } from './../../shared/customer.service';\nimport { OrderService } from './../../shared/order.service';\nimport { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { OrderItemsComponent } from '../order-items/order-items.component';\nimport { Customer } from 'src/app/shared/customer.model';\nimport { ToastrService } from 'ngx-toastr';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { OrderDto } from 'src/app/shared/order-dto.model';\nimport { PrinterService } from 'src/app/shared/printer.service';\n\n\n@Component({\n  selector: 'app-order',\n  templateUrl: './order.component.html',\n  styles: []\n})\nexport class OrderComponent implements OnInit {\n  customerList: Customer[];\n  isValid = true;\n  orderDto: OrderDto;\n\n  constructor(private service: OrderService,\n    private dialog: MatDialog,\n    private customerService: CustomerService,\n    private toastr: ToastrService,\n    private router: Router,\n    private currentRoute: ActivatedRoute,\n    private printerService: PrinterService) { }\n\n  ngOnInit() {\n    const orderID = this.currentRoute.snapshot.paramMap.get('id');\n    if (orderID == null) {\n      this.resetForm();\n    } else {\n\n      this.service.getOrderByID(parseInt(orderID)).then(res => {\n        this.orderDto = res;\n\n        this.service.formData = this.orderDto;\n        this.service.formData.deletedOrderItemIDs = '';\n        this.service.orderItems = this.orderDto.orderItems;\n\n      });\n    }\n\n    this.customerService.getCustomerList().then(res => {\n      this.customerList = res as Customer[];\n    });\n  }\n\n  resetForm(form?: NgForm) {\n    if (form = null) {\n      form.resetForm();\n    }\n    this.service.formData = {\n      orderId: null,\n      orderNo: Math.floor(100000 + Math.random() * 900000).toString(),\n      customerid: 0,\n      pMethod: '',\n      gTotal: 0,\n      deletedOrderItemIDs: ''\n    };\n    this.service.orderItems = [];\n  }\n\n  AddOrEditOrderItem(orderItemIndex, OrderID) {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.autoFocus = true;\n    dialogConfig.disableClose = true;\n    dialogConfig.width = '50%';\n    dialogConfig.data = { orderItemIndex, OrderID };\n    this.dialog.open(OrderItemsComponent, dialogConfig).afterClosed().subscribe(res => {\n      this.updateGrandTotal();\n    });\n  }\n\n\n  onDeleteOrderItem(orderItemID: number, i: number) {\n    if (orderItemID != null) {\n      /*exclusão baseada num array montado no servidor após submit\n      this.service.formData.deletedOrderItemIDs += orderItemID + \",\";\n      */\n      // exclusão direta\n      if (confirm('Confirma exclusão do item?')) {\n        this.service.deleteOrderItem(orderItemID).then(res => {\n          this.toastr.warning('Item excluído com sucesso!', 'Restaurente App.');\n        });\n      }\n\n      this.service.orderItems.splice(i, 1);\n    }\n    this.updateGrandTotal();\n  }\n\n  updateGrandTotal() {\n    this.service.formData.gTotal = this.service.orderItems.reduce((prev, curr) => {\n      return prev + curr.total;\n    }, 0);\n    this.service.formData.gTotal = parseFloat(this.service.formData.gTotal.toFixed(2));\n  }\n\n  validateForm() {\n    this.isValid = true;\n    if (this.service.formData.customerid === 0) {\n      this.isValid = false;\n    } else if (this.service.orderItems.length === 0) {\n      this.isValid = false;\n    }\n    return this.isValid;\n  }\n\n\n  onSubmit(form: NgForm) {\n    if (this.validateForm()) {\n      this.service.saveOrUpdateOrder().subscribe(res => {\n        this.resetForm();\n        this.toastr.success('Registro gravad com Sucesso!', 'Restaurente App.');\n        this.router.navigate(['/orders']);\n      });\n    }\n  }\n\n  onExportar(OrderID) {\n    this.printerService.getOrderExport('order-' + OrderID,\n       '/order/relatorio/' + OrderID);\n  }\n\n}\n","module.exports = \"<table class=\\\"table table-hover\\\">\\n  <thead class=\\\"thead-light\\\">\\n    <th>#Order No.</th>\\n    <th>Customer</th>\\n    <th>P. Method</th>\\n    <th>G. Total</th>\\n    <th>\\n      <a class=\\\"btn btn-outline-success\\\" routerLink=\\\"/order\\\"><i class=\\\"fa fa-plus-square\\\"></i> Novo Pedido</a>\\n    </th>\\n  </thead>\\n  <tbody>\\n    <tr *ngFor=\\\"let item of orderList\\\">\\n      <th (click)=\\\"openForEdit(item.orderId)\\\">{{item.orderNo}}</th>\\n      <td (click)=\\\"openForEdit(item.orderId)\\\">{{item.customer.name}}</td>\\n      <td (click)=\\\"openForEdit(item.orderId)\\\">{{item.pMethod}}</td>\\n      <td (click)=\\\"openForEdit(item.orderId)\\\">{{item.gTotal | currency: 'BRL'}}</td>\\n      <td>\\n          <a class=\\\"btn text-danger\\\" (click)=\\\"onOrderDelete(item.orderId)\\\"><i class=\\\"fa fa-trash fa-lg\\\"></i></a>\\n      </td>\\n    </tr>\\n  </tbody>\\n</table>\\n\\n<mat-paginator [length]=\\\"length\\\"\\n               [pageSize]=\\\"pageSize\\\"\\n               [pageSizeOptions]=\\\"pageSizeOptions\\\"\\n               (page)=\\\"pageEvent = getServerData($event)\\\">\\n</mat-paginator>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { OrderService } from '../shared/order.service';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { PageEvent } from '@angular/material';\nimport { Page } from '../shared/page.model';\n\n@Component({\n  selector: 'app-orders',\n  templateUrl: './orders.component.html',\n  styles: []\n})\nexport class OrdersComponent implements OnInit {\n  orderList;\n\n  // MatPaginator Inputs\n  pageIndex = 0;\n  length = 100;\n  pageSize = 10;\n  pageSizeOptions: number[] = [5, 10, 25, 100];\n  // MatPaginator Output\n  pageEvent: PageEvent;\n\n  page: Page;\n\n  constructor(private service: OrderService,\n    private router: Router,\n    private toastr: ToastrService) { }\n\n  ngOnInit() {\n    this.refreshList();\n  }\n\n  refreshList() {\n    this.service.getOrderListPaginated(this.pageIndex, this.pageSize)\n    .then(res => {\n      this.page = res,\n      this.orderList = this.page.content;\n      this.length = this.page.totalElements;\n    });\n  }\n\n  openForEdit(orderID: number) {\n    this.router.navigate(['/order/edit/' + orderID]);\n  }\n\n  onOrderDelete(id: number) {\n    if (confirm('Confirma exclusão desse registro?')) {\n      this.service.deleteOrder(id).then(res => {\n        this.refreshList();\n        this.toastr.warning('Registro excluído com sucesso!', 'Restaurente App.');\n      });\n    }\n  }\n\n  getServerData(event?: PageEvent) {\n    this.pageIndex = event.pageIndex;\n    this.pageSize = event.pageSize;\n    this.refreshList();\n\n  }\n\n}\n","module.exports = \"form {\\n    display: flex;\\n    flex-direction: column;\\n    margin-top: 20px;\\n}\\n\\nbutton {\\n    margin-top: 20px;\\n    margin-right: 15px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcHJvZHVjdC9wcm9kdWN0LWNyZWF0ZS9wcm9kdWN0LWNyZWF0ZS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksY0FBYztJQUNkLHVCQUF1QjtJQUN2QixpQkFBaUI7Q0FDcEI7O0FBRUQ7SUFDSSxpQkFBaUI7SUFDakIsbUJBQW1CO0NBQ3RCIiwiZmlsZSI6InNyYy9hcHAvcHJvZHVjdC9wcm9kdWN0LWNyZWF0ZS9wcm9kdWN0LWNyZWF0ZS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiZm9ybSB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIG1hcmdpbi10b3A6IDIwcHg7XG59XG5cbmJ1dHRvbiB7XG4gICAgbWFyZ2luLXRvcDogMjBweDtcbiAgICBtYXJnaW4tcmlnaHQ6IDE1cHg7XG59Il19 */\"","module.exports = \"<mat-card>\\n  <mat-card-title>Novo Produto</mat-card-title>\\n  <form>\\n      <mat-form-field>\\n          <input matInput placeholder=\\\"Nome\\\" [(ngModel)]=\\\"product.name\\\" name=\\\"name\\\">\\n      </mat-form-field>\\n\\n      <mat-form-field>\\n          <input matInput placeholder=\\\"Preço (R$)\\\" [(ngModel)]=\\\"product.price\\\" name=\\\"price\\\">\\n      </mat-form-field>\\n\\n\\n  </form>\\n\\n  <button mat-raised-button (click)=\\\"createProduct()\\\" color=\\\"primary\\\">\\n      Salvar\\n  </button>\\n\\n  <button mat-raised-button (click)=\\\"cancel()\\\" color=\\\"warnning\\\">\\n      Cancelar\\n  </button>\\n</mat-card>\"","import { Component, OnInit } from '@angular/core';\nimport { Item } from 'src/app/shared/item.model';\nimport { ItemService } from 'src/app/shared/item.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-product-create',\n  templateUrl: './product-create.component.html',\n  styleUrls: ['./product-create.component.css']\n})\nexport class ProductCreateComponent implements OnInit {\n  product: Item = {\n    name: '', price: null\n  }\n\n  constructor(private service: ItemService,\n    private router: Router) { }\n\n  ngOnInit() {\n  }\n\n\n  createProduct(): void {\n    this.service.saveOrUpdateProduct(this.product).subscribe(() => {\n      //this.service.showMessage('Criar produto');\n      this.router.navigate(['/products']);\n    })\n  }\n\n  cancel(): void{\n    this.router.navigate(['/products']);\n  }\n\n}\n","module.exports = \"form {\\n    display: flex;\\n    flex-direction: column;\\n    margin-top: 20px;\\n}\\n\\nbutton {\\n    margin-top: 20px;\\n    margin-right: 15px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcHJvZHVjdC9wcm9kdWN0LWVkaXQvcHJvZHVjdC1lZGl0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxjQUFjO0lBQ2QsdUJBQXVCO0lBQ3ZCLGlCQUFpQjtDQUNwQjs7QUFFRDtJQUNJLGlCQUFpQjtJQUNqQixtQkFBbUI7Q0FDdEIiLCJmaWxlIjoic3JjL2FwcC9wcm9kdWN0L3Byb2R1Y3QtZWRpdC9wcm9kdWN0LWVkaXQuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbImZvcm0ge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICBtYXJnaW4tdG9wOiAyMHB4O1xufVxuXG5idXR0b24ge1xuICAgIG1hcmdpbi10b3A6IDIwcHg7XG4gICAgbWFyZ2luLXJpZ2h0OiAxNXB4O1xufSJdfQ== */\"","module.exports = \"<mat-card>\\n  <mat-card-title>Editar Produto</mat-card-title>\\n  <form>\\n      <mat-form-field>\\n          <input matInput placeholder=\\\"Nome\\\" [(ngModel)]=\\\"product.name\\\" name=\\\"name\\\">\\n      </mat-form-field>\\n\\n      <mat-form-field>\\n          <input matInput placeholder=\\\"Preço (R$)\\\" [(ngModel)]=\\\"product.price\\\" name=\\\"price\\\">\\n      </mat-form-field>\\n\\n\\n  </form>\\n\\n  <button mat-raised-button (click)=\\\"updateProduct()\\\" color=\\\"primary\\\">\\n      Salvar\\n  </button>\\n\\n  <button mat-raised-button (click)=\\\"cancel()\\\" color=\\\"warnning\\\">\\n      Cancelar\\n  </button>\\n</mat-card>\"","import { Component, OnInit } from '@angular/core';\nimport { ItemService } from 'src/app/shared/item.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Item } from 'src/app/shared/item.model';\n\n@Component({\n  selector: 'app-product-edit',\n  templateUrl: './product-edit.component.html',\n  styleUrls: ['./product-edit.component.css']\n})\nexport class ProductEditComponent implements OnInit {\n  product: Item = new Item();\n\n  constructor(private service: ItemService,\n    private router: Router, private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    const id = this.route.snapshot.paramMap.get('id');\n\n    this.service.getProductByID(parseInt(id)).then(res => {\n      this.product = res;\n    });\n\n  }\n\n\n  updateProduct(): void{\n    this.service.saveOrUpdateProduct(this.product).subscribe(() => {\n      //this.service.showMessage('Criar produto');\n      this.router.navigate(['/products']);\n    });\n  }\n\n  cancel(): void {\n    this.router.navigate(['/products']);\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Byb2R1Y3QvcHJvZHVjdC1ob21lL3Byb2R1Y3QtaG9tZS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<app-product-list></app-product-list>\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { ItemService } from 'src/app/shared/item.service';\n\n@Component({\n  selector: 'app-product-home',\n  templateUrl: './product-home.component.html',\n  styleUrls: ['./product-home.component.css']\n})\nexport class ProductHomeComponent implements OnInit {\n\n\n  constructor(private service: ItemService,\n    private router: Router,\n    private toastr: ToastrService) { }\n\n  ngOnInit() {\n    \n  }\n\n  \n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Byb2R1Y3QvcHJvZHVjdC1saXN0L3Byb2R1Y3QtbGlzdC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<table class=\\\"table table-hover\\\">\\n  <thead class=\\\"thead-light\\\">\\n    <th>Produto</th>\\n    <th>Preço</th>\\n    <th>\\n      <a class=\\\"btn btn-outline-success\\\" routerLink=\\\"/product\\\"><i class=\\\"fa fa-plus-square\\\"></i> Novo Produto</a>\\n    </th>\\n  </thead>\\n  <tbody>\\n    <tr *ngFor=\\\"let item of productList\\\">\\n      <td (click)=\\\"openForEdit(item.itemId)\\\">{{item.name}}</td>\\n      <td (click)=\\\"openForEdit(item.itemId)\\\">{{item.price | currency: 'BRL'}}</td>\\n      <td>\\n          <a class=\\\"btn text-danger\\\" (click)=\\\"onProductDelete(item.itemId)\\\"><i class=\\\"fa fa-trash fa-lg\\\"></i></a>\\n      </td>\\n    </tr>\\n  </tbody>\\n</table>\\n\\n<mat-paginator [length]=\\\"length\\\"\\n               [pageSize]=\\\"pageSize\\\"\\n               [pageSizeOptions]=\\\"pageSizeOptions\\\"\\n               (page)=\\\"pageEvent = getServerData($event)\\\">\\n</mat-paginator>\"","import { Component, OnInit } from '@angular/core';\nimport { ItemService } from 'src/app/shared/item.service';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { PageEvent } from '@angular/material';\nimport { Page } from 'src/app/shared/page.model';\n\n@Component({\n  selector: 'app-product-list',\n  templateUrl: './product-list.component.html',\n  styleUrls: ['./product-list.component.css']\n})\nexport class ProductListComponent implements OnInit {\n  productList;\n\n  // MatPaginator Inputs\n  pageIndex = 0;\n  length = 100;\n  pageSize = 10;\n  pageSizeOptions: number[] = [5, 10, 25, 100];\n  // MatPaginator Output\n  pageEvent: PageEvent;\n\n  page: Page;\n\n\n  constructor(private service: ItemService,\n    private router: Router,\n    private toastr: ToastrService) { }\n\n  ngOnInit() {\n    this.refreshList();\n  }\n\n  refreshList() {\n    this.service.getProductListPaginated(this.pageIndex, this.pageSize)\n      .then(res => {\n        this.page = res,\n        this.productList = this.page.content;\n        this.length = this.page.totalElements;\n      });\n  }\n\n  openForEdit(id: number) {\n    this.router.navigate(['/product/edit/' + id]);\n  }\n\n  onProductDelete(id: number) {\n    if (confirm('Confirma exclusão desse registro?')) {\n      this.service.deleteProduct(id).then(res => {\n        this.refreshList();\n        this.toastr.warning('Registro excluído com sucesso!', 'Restaurente App.');\n      });\n    }\n  }\n\n  getServerData(event?: PageEvent) {\n    this.pageIndex = event.pageIndex;\n    this.pageSize = event.pageSize;\n    this.refreshList();\n\n  }\n\n}\n","export class Customer {\n    customerId?: number;\n    name: string;\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { Customer } from './customer.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CustomerService {\n\n  constructor(private http: HttpClient) { }\n\n  getCustomerList(): any  {\n    return this.http.get(environment.apiURL + '/customer/all').toPromise();\n  }\n\n  getCustomerListPaginated(index: number, size: number): any  {\n    return this.http.get(environment.apiURL + '/customer?page=' + index + '&size=' + size).toPromise();\n  }\n\n\n\n  getCustomerByID(id: number): any {\n    return this.http.get(environment.apiURL + '/customer/' + id).toPromise();\n  }\n\n\n  saveOrUpdateCustomer(c: Customer) {\n\n    return this.http.post(environment.apiURL + '/customer', c);\n\n  }\n\n  updateCustomer(c: Customer) {    \n    return this.http.put(environment.apiURL + '/customer/' + c.customerId, c);\n  }\n\n\n  deleteCustomer(id: number) {\n    return this.http.delete(environment.apiURL + '/customer/' + id).toPromise();\n  }\n\n\n}\n","export class Item {\n    itemId?: number;\n    name: string;\n    price: number;\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { Item } from './item.model';\nimport Big from 'big.js';\nimport { Observable } from 'rxjs';\nimport { Page } from './page.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ItemService {\n\n  constructor(private http: HttpClient) { }\n\n  getProductList(): any {\n    return this.http.get(environment.apiURL + '/product/all').toPromise();\n  }\n\n  getProductListPaginated(index: number, size: number): any {\n    return this.http.get(environment.apiURL + '/product?page=' + index + '&size=' + size).toPromise();\n  }\n\n  getProductByID(id: number): any {\n    return this.http.get(environment.apiURL + '/product/' + id).toPromise();\n  }\n\n\n  saveOrUpdateProduct(p: Item) {\n\n    if (p.itemId != null) {\n      return this.http.put(environment.apiURL + '/product/' + p.itemId, p);\n    } else {\n      return this.http.post(environment.apiURL + '/product', p);\n    }\n\n  }\n\n\n  deleteProduct(id: number) {\n    return this.http.delete(environment.apiURL + '/product/' + id).toPromise();\n  }\n\n\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Order } from './order.model';\nimport { OrderItem } from './order-item.model';\nimport { environment } from 'src/environments/environment';\nimport { OrderDto } from './order-dto.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OrderService {\n  formData: Order;\n  orderItems: OrderItem[];\n  orderDto: OrderDto;\n\n  constructor(private http: HttpClient) { }\n\n  saveOrUpdateOrder() {\n      this.orderDto = this.formData;\n      this.orderDto.orderItems = this.orderItems;\n\n    var body = {\n      ...this.orderDto\n      //...this.formData,\n      //OrderItems: this.orderItems\n    };\n     if (this.orderDto.orderId != null) {\n      return this.http.put(environment.apiURL + '/order/' + this.orderDto.orderId, body);\n     } else {\n      return this.http.post(environment.apiURL + '/order', body);\n     }\n\n  }\n\n  getOrderList() {\n    return this.http.get(environment.apiURL + '/order/all').toPromise();\n  }\n\n  getOrderListPaginated(index: number, size: number): any  {\n    return this.http.get(environment.apiURL + '/order?page=' + index + '&size=' + size).toPromise();\n  }\n\n\n  getOrderByID(id:number):any {\n    return this.http.get(environment.apiURL + '/order/' + id).toPromise();\n  }\n\n  deleteOrder(id: number) {\n    return this.http.delete(environment.apiURL + '/order/' + id).toPromise();\n  }\n\n  deleteOrderItem(id: number) {    \n    return this.http.delete(environment.apiURL + '/order/item/' + id).toPromise();\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PrinterService {\n\n  constructor(private http: HttpClient) { }\n\n  exportPDF(path: string): Observable<Blob> {\n    return this.http.get(environment.apiURL + path, { responseType: 'blob' });\n  }\n\n  getOrderExport(filename: string, path: string): void {\n    this.exportPDF(path)\n      .subscribe(x => {\n        // It is necessary to create a new blob object with mime-type explicitly set\n        // otherwise only Chrome works like it should\n        const newBlob = new Blob([x], { type: 'application/pdf' });\n\n        // IE doesn't allow using a blob object directly as link href\n        // instead it is necessary to use msSaveOrOpenBlob\n        if (window.navigator && window.navigator.msSaveOrOpenBlob) {\n          window.navigator.msSaveOrOpenBlob(newBlob);\n          return;\n        }\n\n        // For other browsers: \n        // Create a link pointing to the ObjectURL containing the blob.\n        const data = window.URL.createObjectURL(newBlob);\n\n        const link = document.createElement('a');\n        link.href = data;\n        link.download = filename + '.pdf';\n        // this is necessary as link.click() does not work on the latest firefox\n        link.dispatchEvent(new MouseEvent('click', { bubbles: true, cancelable: true, view: window }));\n\n        setTimeout(function () {\n          // For Firefox it is necessary to delay revoking the ObjectURL\n          window.URL.revokeObjectURL(data);\n          link.remove();\n        }, 100);\n      });\n\n  }\n\n\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: true,\n  apiURL : 'https://fr-restaurante.herokuapp.com'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}